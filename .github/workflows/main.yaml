---
name : Build and Push react Image to AWS ECR
on:
  push:
    branches: [main]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Automatic Tagging of Releases
    #   id: increment-git-tag
    #   run: |
    #     bash ./build/git_update.sh -v major

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cicd-test
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    # # Helm
    # - name: Install Helm
    #   run: |
    #     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    # - name: Package Helm chart
    #   run: |
    #     helm package path/to/chart --version ${GITHUB_SHA:0:7}
    #     mv path/to/chart-*.tgz mychart.tgz

    # - name: Deploy with Argo CD
    #   run: |
    #     argocd app create myapp --repo <repository_url> --path <path_to_app> --dest-server https://kubernetes.default.svc --dest-namespace mynamespace --helm-set image.tag=${GITHUB_SHA:0:7} --sync-policy automated
    #     argocd app sync myapp

    # - name: Verify deployment
    #   run: |
    #     kubectl get pods --namespace mynamespace